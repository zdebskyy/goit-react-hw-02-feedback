{"version":3,"sources":["components/FeedbackButtons.js","components/Statistics.js","components/SectionTitle.js","components/Notification.js","App.js","index.js"],"names":["FeedbackButtons","onUpdateClick","type","onClick","Statistics","stats","total","feedbackValue","good","neutral","bad","SectionTitle","title","children","Notification","message","App","state","countTotalFeedback","Object","values","reduce","acc","el","countPositiveFeedbackPercentage","positive","Math","round","voteUpdate","setState","prevState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"2NAsBeA,EAnBS,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACzB,OACE,6BACE,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,UAAnD,QAGA,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,aAAnD,WAGA,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,SAAnD,SCoBSG,EA7BI,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1BC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IAEvB,OACE,oCACE,uCAAaF,GACb,6BACA,0CAAgBC,GAChB,6BACA,uCAAaC,GACb,6BACA,yCAAeJ,GACf,6BACA,qDAA4BC,GAAgB,EAA5C,SCASI,EAbM,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC7B,OACE,iCACE,4BAAKD,GACJC,ICIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,2BAAIA,ICEQC,E,4MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPQ,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAKC,GAE5C,OADAD,GAAOC,IAEN,I,EAGLC,gCAAkC,SAAClB,EAAOmB,GACxC,OAAOC,KAAKC,MAAkB,IAAXF,EAAkBnB,I,EAGvCsB,WAAa,SAAC1B,GACZ,EAAK2B,UAAS,SAACC,GACb,OAAO,eACJ5B,EAAO4B,EAAU5B,GAAQ,O,uDAM9B,IAAMI,EAAQyB,KAAKb,qBACbO,EAAWM,KAAKP,gCACpBlB,EACAyB,KAAKd,MAAMT,MAEb,OACE,6BACE,kBAAC,EAAD,CAAcI,MAAM,qBAClB,kBAAC,EAAD,CAAiBX,cAAe8B,KAAKH,cAEvC,kBAAC,EAAD,CAAchB,MAAM,cACjBN,EAAQ,EACP,kBAAC,EAAD,CACED,MAAO0B,KAAKd,MACZX,MAAOA,EACPC,cAAekB,IAGjB,kBAAC,EAAD,CAAcV,QAAS,4B,GA5CFiB,aCFjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.edbba14b.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackButtons = ({ onUpdateClick }) => {\n  return (\n    <div>\n      <button type=\"button\" onClick={() => onUpdateClick(\"good\")}>\n        Good\n      </button>\n      <button type=\"button\" onClick={() => onUpdateClick(\"neutral\")}>\n        Neutral\n      </button>\n      <button type=\"button\" onClick={() => onUpdateClick(\"bad\")}>\n        Bad\n      </button>\n    </div>\n  );\n};\nFeedbackButtons.propTypes = {\n  onUpdateClick: PropTypes.func.isRequired,\n};\n\nexport default FeedbackButtons;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ stats, total, feedbackValue }) => {\n  const { good, neutral, bad } = stats;\n\n  return (\n    <>\n      <span>Good :{good}</span>\n      <br></br>\n      <span>Neutral: {neutral}</span>\n      <br></br>\n      <span>Bad : {bad}</span>\n      <br></br>\n      <span>Total : {total}</span>\n      <br></br>\n      <span>Positive feedback : {!feedbackValue ? 0 : feedbackValue} % </span>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  stats: PropTypes.shape({\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n  }).isRequired,\n\n  total: PropTypes.number.isRequired,\n  feedbackValue: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst SectionTitle = ({ title, children }) => {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n};\nSectionTitle.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default SectionTitle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport FeedbackButtons from \"./components/FeedbackButtons\";\nimport Statistics from \"./components/Statistics\";\nimport SectionTitle from \"./components/SectionTitle\";\nimport Notification from \"./components/Notification\";\n\nexport default class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, el) => {\n      acc += el;\n      return acc;\n    }, 0);\n  };\n\n  countPositiveFeedbackPercentage = (total, positive) => {\n    return Math.round((positive * 100) / total);\n  };\n\n  voteUpdate = (type) => {\n    this.setState((prevState) => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    });\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    const positive = this.countPositiveFeedbackPercentage(\n      total,\n      this.state.good\n    );\n    return (\n      <div>\n        <SectionTitle title=\"Leave a feedback!\">\n          <FeedbackButtons onUpdateClick={this.voteUpdate} />\n        </SectionTitle>\n        <SectionTitle title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              stats={this.state}\n              total={total}\n              feedbackValue={positive}\n            />\n          ) : (\n            <Notification message={\"No feedback given\"} />\n          )}\n        </SectionTitle>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}